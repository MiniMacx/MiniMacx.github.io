<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信礼品卡踩坑之旅</title>
      <link href="/2019/01/28/%E5%BE%AE%E4%BF%A1%E7%A4%BC%E5%93%81%E5%8D%A1%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%97%85/"/>
      <url>/2019/01/28/%E5%BE%AE%E4%BF%A1%E7%A4%BC%E5%93%81%E5%8D%A1%E8%B8%A9%E5%9D%91%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>文中所描述的项目截止于<strong>2018-10</strong>，因此文章内容具有一定<strong>时效性</strong>，请大家注意。本文为博主第一篇博客，不足之处还请各位巨佬们指出:D<br>撰写这篇博客初衷有二：记录自己第一个正式项目的开发历程、为需要<strong>开通微信礼品卡/实现自定义礼品卡小程序</strong>的各位分享一些流程与思路，因此本文总体划为以下部分：</p><blockquote><ul><li>官方礼品卡部署</li><li>自定义小程序实现</li></ul></blockquote><p>项目来自于某公司甲方爸爸的两版需求：第一版为开通官方礼品卡小程序，旗下会员可在其他小程序中利用礼品卡为账户充值，第二版模仿星巴克用星说，开发新的礼品卡小程序。<br>本文面向具有一定经验的微信开发者，微信相关的其他功能（开发者配置、登录、支付等）不再一一赘述。<br>SDK用的是班纳睿大大的<a href="https://github.com/Wechat-Group/WxJava" target="_blank" rel="noopener">WxJava</a>，在此安利一波～</p><a id="more"></a><h1 id="官方礼品卡部署"><a href="#官方礼品卡部署" class="headerlink" title="官方礼品卡部署"></a>官方礼品卡部署</h1><p>先附上官方<del>槽点满满</del>充满诚意的<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=215143440770UT7" target="_blank" rel="noopener">礼品卡文档</a>。<br>这是目前我见过最长（所有内容挤进一篇）、最乱（没有目录，排版不统一，甚至有错别字）的微信文档了。大致讲了以下几点：</p><blockquote><ul><li>小程序演示</li><li>开通条件</li><li>礼品卡CRUD</li><li>货架CRUD</li><li>绑定支付商户</li><li>代码上传</li><li>订单查询</li><li>事件推送</li><li>使用方式</li><li>退款</li><li>发票</li><li>外链跳转</li><li><del>压根不会鸟你的</del>联系我们</li></ul></blockquote><p>WOWEE～看起来啥都给我们api caller准备好了，接下来调就完事了咩～LET’s GO DUDE!</p><h3 id="首先注意"><a href="#首先注意" class="headerlink" title="首先注意"></a>首先注意</h3><p>1、礼品卡亦属于卡券的一个分类，建议先查阅<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=215143440770UT7" target="_blank" rel="noopener">微信卡券文档</a>以便了解相关字段与词汇的含义。<br>2、开通礼品卡的公众号门槛较高，若需开通带储值功能的礼品卡，更是要若干认证与手续，记得提前准备，个人认证的公众号无法申请礼品卡功能。<br>3、创建小程序<strong>不需要写代码</strong>，完全靠接口调用生成。</p><h3 id="接入准备"><a href="#接入准备" class="headerlink" title="接入准备"></a>接入准备</h3><ul><li>公众号-&gt;已认证</li><li>公众号开通-&gt;卡券功能</li><li>公众号开通-&gt;支付功能(微信认证)</li><li>微信公众号-&gt;快速关联小程序(创建小程序账号)</li><li>小程序账号-&gt;绑定 商户号(微信支付)</li></ul><h3 id="礼品卡创建"><a href="#礼品卡创建" class="headerlink" title="礼品卡创建"></a>礼品卡创建</h3><p>json数据，分礼品卡与兑换卡两种，在购买页会有区别。看过卡券文档的朋友们可能会发现，微信没有为卡券做一个完整的分类统计。在这里我可以说，<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1451025283" target="_blank" rel="noopener">会员卡</a>和礼品卡是目前<strong>唯二</strong>可以放入“卡”中的，其余皆为票券，这也为后续的自定义礼品卡实现提供了思路。</p><ul><li>礼品卡的文档中没有对每个字段做详细图解，不过我们可以参照会员卡逐一对照：</li></ul><img src="http://pic.iamhungry.cn/static/images/membercard.png"><h3 id="货架创建"><a href="#货架创建" class="headerlink" title="货架创建"></a>货架创建</h3><p>json数据，货架作为礼品卡的载体，可生成多个，但只能上线其中一个，每行标题对应<code>category_list</code>中的元素，每一小块代表<code>theme_list</code>中的一个元素，将创建完成的礼品卡放入<code>theme_list</code>的<code>item_list</code>字段中，其余字段可自调，创建成功后返回的<code>page_id</code>需要保存，后续会用到。货架包含的字段较多，文档中有详细的解释，这里就不展开了。<br><strong>特别注意：</strong>创建货架的接口每天有调用次数限制，约为<strong>10次/天</strong>，调用前建议校验json格式，检查一遍字段的长度限制。 </p><h3 id="开通支付"><a href="#开通支付" class="headerlink" title="开通支付"></a>开通支付</h3><ol><li>调文档8.1中的接口，带上你公众号的商户号即可，调用成功后访问返回结果中的Url，登录商户平台，产品中心-&gt;微信礼品卡，点击开通。</li><li>8.2接口，带上小程序appid与商户号，成功即开通完成。</li></ol><h3 id="上传生成代码"><a href="#上传生成代码" class="headerlink" title="上传生成代码"></a><del>上传</del>生成代码</h3><p>调用8.3接口，带上对应的<code>appid</code>+<code>page_id</code>，等待片刻后即可在小程序后台看到体验版，扫码进去后看到的约莫是这样子：</p><hr><img src="http://pic.iamhungry.cn/static/images/old_index.jpg?imageView2/2/w/250"><hr><img src="http://pic.iamhungry.cn/static/images/wulian.jpeg"><p>emmm…..<br>基本功能算是都有了，只是这样式…啧啧</p><h3 id="退款问题"><a href="#退款问题" class="headerlink" title="退款问题"></a>退款问题</h3><p> 首先国家法律规定，<strong>必须有退款功能</strong>。所以要做，要是礼品卡过期了、失效了，这也是能退款的，除非你设置了长期有效(不要小看，要相信你的用户是个大牛叉)</p><h3 id="优缺点小结"><a href="#优缺点小结" class="headerlink" title="优缺点小结"></a>优缺点小结</h3><blockquote><ul><li>官方支持，从创建到部署轻松+愉快。可选字段多，扩展业务很方便。有独特的送卡消息，支持扫码消费或者线下核销。</li><li>样式普通，布局简陋，颜值全靠图片衬托。</li></ul></blockquote><h1 id="自定义小程序实现"><a href="#自定义小程序实现" class="headerlink" title="自定义小程序实现"></a>自定义小程序实现</h1><blockquote><p>尽管官方的礼品卡小程序不是很美观，但其他方面还是可以接受的。若要是需求方提到了<strong>星巴克用星说</strong>这玩意并且要给他个差不多样子的，那你就麻烦了。接下来你可能会一阵懵逼，陷入江局——它啥都跟官方的礼品卡小程序一样，但<del>他娘的</del>界面还比你好看，甚至还会有”之前太丑肯定是字段调得不对”的错觉，咱们先看看啥叫别人家的小程序：</p></blockquote><hr><img src="http://pic.iamhungry.cn/static/images/xbk.jpg?imageView2/2/w/250"><hr><img src="http://pic.iamhungry.cn/static/images/xbk_index.jpg?imageView2/2/w/250"><hr><blockquote><ul><li>星巴克用星说是微信团队特别定制的礼品卡小程序，也是自它出现以后，官方才开放了礼品卡的相关文档，可以说是其他礼品卡小程序的始祖。</li></ul></blockquote><p>概括了一下用星说之于其他礼品卡小程序所没有的features：</p><blockquote><ul><li>带阴影的块状元素，看起来更加优雅</li><li>支持gif的轮播图广告</li><li>星巴克风格的icon</li><li>全新的购买界面</li><li>节日期间首页会有活动弹窗</li></ul></blockquote><h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><p>先放下发麻的头皮，掏出度娘和谷哥捣腾一番后，发觉论坛上也是各种求方案求思路，最有趣的是，还有专门接这类订制礼品卡小程序的公司。<br>其实看到这里我就放心了，既然有人实现了，那它就是可行的，之后我提供的实现方案，不是很优雅，也不够完美，欢迎有做过这类的同好在评论区中分享自己的思路。<br>本节自定义小程序，我们的目标是<strong>模仿星巴克用星说</strong>，有2套思路：</p><blockquote><ul><li>反编译官方小程序获得源码，在其基础上扩展（TODO）</li><li>完全自定义，官方未提供的功能寻求替代方案</li></ul></blockquote><h2 id="反编译实现"><a href="#反编译实现" class="headerlink" title="反编译实现"></a>反编译实现</h2><p>由于工期原因，也考虑到小程序没法过审的风险，没有尝试这一套方案。最近会尝试反编译，看看能否拿到原生礼品卡小程序的源码。（TODO）</p><h2 id="完全自定义实现"><a href="#完全自定义实现" class="headerlink" title="完全自定义实现"></a>完全自定义实现</h2><p>咨询了相关公司（然鹅不肯说=。=），review原生小程序，以及后期的实操经历，我先把这几个无法按原礼品卡小程序实现的点放在这里：</p><blockquote><ul><li>官方礼品卡不能复用(会显示为’已领取’状态但无法领卡)</li><li>不能发礼品卡类型的消息给用户</li><li>无法选择好友或群并返回其信息</li></ul></blockquote><p>特别是接口开放部分，只要是好友链相关，微信都不会给你开放，更不用说选择好友后返回其昵称与头像了，领卡这部分也是一大问题，查阅了JS-SDK和小程序文档，并没有发现可以向用户发送礼品卡信息的方法。所以说，<strong>要百分百模仿用星说是不可能的</strong>。</p><h3 id="Key-Points"><a href="#Key-Points" class="headerlink" title="Key Points"></a>Key Points</h3><p>总的来说，要完成一个像样的实现，以下是关键：</p><blockquote><ul><li>找到一种合适的卡券替代礼品卡</li><li>选择好友的替代方案</li><li>领卡的替代方案</li></ul></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="会员卡代替礼品卡"><a href="#会员卡代替礼品卡" class="headerlink" title="会员卡代替礼品卡"></a>会员卡代替礼品卡</h4><p>在上文中有提到过，礼品卡和会员卡是唯二可以放入”卡”中的卡券。会员卡拥有的字段比礼品卡丰富很多，完全可以替换。在事件推送上，会员卡遵循微信卡券的推送格式，而礼品卡有其独特类型的推送事件，比如超过24小时后未领取退回的事件，这可以做成定时任务代替，问题不大。接口方面，虽然会员卡没有核销接口，但也能用失效接口代替，其余也是应有尽有。<br><strong>特别注意</strong>：用户每次购买应新建一张会员卡，即新的<code>card_id</code>，若发放给用户的卡id相同，当用户选择不同卡面时必会用到更新接口，而更新卡面会影响该id下的所有卡，包括其他用户已领取的会员卡，从而导致所有会员卡卡面都会变化。</p><h4 id="使用分享功能指定发送对象"><a href="#使用分享功能指定发送对象" class="headerlink" title="使用分享功能指定发送对象"></a>使用分享功能指定发送对象</h4><p>分享功能是为数不多用户间发送消息的途径，既然小程序内没法指定发送对象，那我们就直接发送分享消息，虽然不够美观，但也能引导用户点开小程序，这也意味着后续的领卡环节将在小程序里完成。</p><h4 id="小程序内调起领卡"><a href="#小程序内调起领卡" class="headerlink" title="小程序内调起领卡"></a>小程序内调起领卡</h4><p>在小程序内做一个领取页，后台先准备好待领取卡的<code>JsApiTicket</code>，前段调用小程序的<a href="https://developers.weixin.qq.com/miniprogram/dev/api/wx.addCard.html" target="_blank" rel="noopener">发卡接口</a>调起官方领卡页面，放入卡包后跳转至领取成功的页面。整个环节最突兀的是官方领卡显示为会员卡且无法更改，这是做的不好的地方。</p><h3 id="成品展示"><a href="#成品展示" class="headerlink" title="成品展示"></a>成品展示</h3><img src="http://pic.iamhungry.cn/static/images/new_index.jpg?imageView2/2/w/250"><hr><img src="http://pic.iamhungry.cn/static/images/singlecargo.jpg?imageView2/2/w/250"><ul><li>按需求做了单品购买</li></ul><hr><img src="http://pic.iamhungry.cn/static/images/send_to.jpg?imageView2/2/w/250"><ul><li>增加抢红包模式</li></ul><hr><img src="http://pic.iamhungry.cn/static/images/myCard.jpg?imageView2/2/w/250"><hr><img src="http://pic.iamhungry.cn/static/images/getCard.jpg?imageView2/2/w/250"><hr><img src="http://pic.iamhungry.cn/static/images/getCardPage.jpg?imageView2/2/w/250"><hr><blockquote><p>关于样式方面，可以参考liaoruochen的<a href="https://github.com/liaoruochen/Starbucks" target="_blank" rel="noopener">Starbucks</a>，做的很全面，很漂亮。</p></blockquote><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>感谢和我共事的小老弟们，在样式上花了很多功夫，也在这个项目上付出了很多时间，感谢你们。</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://github.com/liaoruochen/Starbucks" target="_blank" rel="noopener">[简书] 微信礼品卡</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>404</title>
      <link href="//404.html"/>
      <url>//404.html</url>
      
        <content type="html"><![CDATA[<style type="text/css">    .article-header {        padding: 0;        padding-top: 26px;        border-left: none;        text-align: center;    }    .article-header:hover {        border-left: none;    }    .article-title {        font-size: 2.1em;    }    strong a {        color: #747474;    }    .article-meta {        display: none;    }    .share {        display: none;    }    .ds-meta {        display: none;    }    .player {        margin-left: -10px;    }    .sign {        text-align: right;        font-style: italic;    }      #page-visit {        display: none;    }    .center {        text-align: center;        height: 2.5em;        font-weight: bold;    }    .article-entry hr {        margin: 0;    }    .pic {        text-align: center;        margin: 0;    }    .pic br {          display: none;      }    #container .article-info-post.article-info {      display: none;      }    #container .article .article-title {    padding: 0;    }</style>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
